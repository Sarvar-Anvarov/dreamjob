import streamlit as st
import requests

from dreamjob.db.utils.data_manipulation import select
from dreamjob.db.utils.engine import DBConfig

st.set_page_config(
    page_title="–ü–æ–∏—Å–∫ —Ä–∞–±–æ—Ç—ã", page_icon="üé®", initial_sidebar_state="expanded"
)


@st.cache()
def load_data():
    engine = DBConfig.get().db_engine
    df = select(engine, columns="id, name, description")
    return df


def prepare_recs(df):
    return (
        df
        .iloc[(map(lambda x: x["id"], reversed(response["recommendations"])))]
        .assign(description=lambda df: df["description"].apply(lambda x: x[:100] + "..."))
    )


st.header("–ü–æ–∏—Å–∫ —Ä–∞–±–æ—Ç—ã")
st.markdown("#### –ú—ã –ø–æ–º–æ–∂–µ–º —Ç–µ–±–µ –Ω–∞–π—Ç–∏ —Ä–∞–±–æ—Ç—É –º–µ—á—Ç—ã!")

with st.sidebar:
    with st.form(key="job search"):
        st.subheader("–§–∏–ª—å—Ç—Ä –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤")
        city = st.multiselect("–ì–æ—Ä–æ–¥(–∞)", ["–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥"], default="–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥")
        salary = st.slider("–î–∏–∞–ø–∞–∑–æ–Ω –∑–∞—Ä–ø–ª–∞—Ç, ‚ÇΩ", 0, 500000, (50000, 250000), step=5000)
        submit_button = st.form_submit_button(label="–ü—Ä–∏–Ω—è—Ç—å")

st.write(
    """
    –û–ø–∏—à–∏ —Å–≤–æ–∏ –Ω–∞–≤—ã–∫–∏, —É–≤–ª–µ—á–µ–Ω–∏—è, –∏–Ω—Ç–µ—Ä–µ—Å—ã –∏ –Ω–∞—à –∞–ª–≥–æ—Ä–∏—Ç–º –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ–¥–±–µ—Ä–µ—Ç
    –¥–ª—è —Ç–µ–±—è –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –≤–∞–∫–∞–Ω—Å–∏–∏.
    """
)

# Send request to backend
text = st.text_area("–¢–æ–ª—å–∫–æ –Ω–µ —Å–∫—Ä–æ–º–Ω–∏—á–∞–π!", value="–£–º–µ—é —Å–æ–±–∏—Ä–∞—Ç—å –∫—É–±–∏–∫ –†—É–±–∏–∫–∞! –í–æ–∑—å–º–∏—Ç–µ –º–µ–Ω—è –Ω–∞ —Ä–∞–±–æ—Ç—É...")
response = requests.post("http://127.0.0.1:8080/recommend", json={"user_input": text}).json()

# Prepare recommendations from response
vacancies = load_data()
recommendations = prepare_recs(vacancies)

st.table(recommendations)
